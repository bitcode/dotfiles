---
# Test the enhanced dotfiles system with auto-detection and GNU Stow

- name: Test Enhanced Dotfiles System
  hosts: localhost
  connection: local
  gather_facts: true
  become: false

  vars:
    profile: "enterprise"
    environment_type: "enterprise"
    ansible_user: "mdrozrosario"
    ansible_user_dir: "/Users/mdrozrosario"

  tasks:
    - name: "üöÄ TESTING ENHANCED DOTFILES SYSTEM"
      debug:
        msg: |
          Testing the enhanced dotfiles system with:
          ‚Ä¢ Auto-detection of user's actual dotfiles
          ‚Ä¢ GNU Stow deployment method
          ‚Ä¢ Enhanced backup and conflict resolution
          ‚Ä¢ Comprehensive validation
          
          Profile: {{ profile }}
          Environment: {{ environment_type }}

    - name: "üîç Test auto-detection system"
      include_tasks: roles/dotfiles/tasks/detect_user_dotfiles.yml
      tags: ['detection']

    - name: "üìä Display detection results"
      debug:
        msg: |
          üéØ Auto-Detection Results:
          
          üìÇ Selected Path: {{ dotfiles_actual_path }}
          üè∑Ô∏è  Repository Type: {{ dotfiles_repo_type }}
          üèóÔ∏è  Structure Type: {{ dotfiles_structure_type }}
          üë§ User Repository: {{ 'YES' if dotfiles_is_user_repo else 'NO' }}
          
          {% if dotfiles_is_user_repo %}
          ‚úÖ SUCCESS: Auto-detected user's actual dotfiles!
          {% else %}
          ‚ö†Ô∏è  WARNING: Using placeholder/template content
          {% endif %}
      tags: ['detection']

    - name: "üß™ Test GNU Stow compatibility"
      shell: |
        if [ -d "{{ dotfiles_actual_path }}" ]; then
          cd "{{ dotfiles_actual_path }}"
          echo "üìÇ Available applications:"
          ls -1 | head -5
          echo ""
          echo "üß™ Testing stow dry-run for zsh:"
          if [ -d "zsh" ]; then
            stow --dry-run --target="{{ ansible_user_dir }}" zsh 2>&1 || echo "Conflicts detected (expected)"
          else
            echo "‚ùå zsh directory not found"
          fi
        else
          echo "‚ùå Dotfiles directory not found: {{ dotfiles_actual_path }}"
        fi
      register: stow_test
      changed_when: false
      tags: ['stow_test']

    - name: "üß™ Stow compatibility test results"
      debug:
        msg: "{{ stow_test.stdout }}"
      tags: ['stow_test']

    - name: "‚úÖ ENHANCED SYSTEM TEST SUMMARY"
      debug:
        msg: |
          üéâ Enhanced Dotfiles System Test Results:
          
          ‚úÖ Auto-Detection: {{ 'WORKING' if dotfiles_actual_path is defined else 'FAILED' }}
          ‚úÖ User Repository: {{ 'DETECTED' if dotfiles_is_user_repo else 'NOT DETECTED' }}
          ‚úÖ GNU Stow Structure: {{ 'COMPATIBLE' if dotfiles_structure_type == 'gnu_stow' else 'NOT COMPATIBLE' }}
          
          üìç Final Configuration:
          ‚Ä¢ Source: {{ dotfiles_actual_path }}
          ‚Ä¢ Type: {{ dotfiles_repo_type }}
          ‚Ä¢ Structure: {{ dotfiles_structure_type }}
          
          üöÄ System Status: {{ 'READY FOR DEPLOYMENT' if (dotfiles_is_user_repo and dotfiles_structure_type == 'gnu_stow') else 'NEEDS CONFIGURATION' }}
      tags: ['summary']
