---
- name: Test Python Version Management
  hosts: localhost
  connection: local
  gather_facts: yes
  
  tasks:
    - name: Test Python detection
      include_role:
        name: python_management
        tasks_from: detect_python.yml
      tags: ['test', 'detection']
    
    - name: Display detection results
      debug:
        msg: |
          üß™ Python Detection Test Results:
          ‚Ä¢ Available Python installations: {{ available_pythons | default([]) | length }}
          ‚Ä¢ Highest version found: {{ detected_python_version | default('None') }}
          ‚Ä¢ Command: {{ detected_python_cmd | default('None') }}
          ‚Ä¢ Target version: {{ python_version_management.target_version }}
          ‚Ä¢ Upgrade needed: {{ python_needs_upgrade | default('Unknown') }}
          ‚Ä¢ pip version: {{ detected_pip_version | default('Unknown') }}
          ‚Ä¢ pipx available: {{ pipx_available | default(false) }}
      tags: ['test', 'detection']
    
    - name: Test validation without installation
      include_role:
        name: python_management
        tasks_from: validate_python.yml
      tags: ['test', 'validation']
      when: detected_python_cmd != 'none'
    
    - name: Display validation results
      debug:
        msg: |
          ‚úÖ Python Validation Test Results:
          ‚Ä¢ Version check: {{ python_validation_results.version_check | default('SKIP') }}
          ‚Ä¢ pip check: {{ python_validation_results.pip_check | default('SKIP') }}
          ‚Ä¢ pipx check: {{ python_validation_results.pipx_check | default('SKIP') }}
          ‚Ä¢ Modules check: {{ python_validation_results.modules_check | default('SKIP') }}
      tags: ['test', 'validation']
      when: python_validation_results is defined
    
    - name: Test summary
      debug:
        msg: |
          üéØ Python Management Test Summary:
          ================================
          ‚Ä¢ Detection: {{ 'PASS' if detected_python_version is defined else 'FAIL' }}
          ‚Ä¢ Version compatibility: {{ 'PASS' if detected_python_version is version(python_version_management.minimum_version, '>=') else 'FAIL' }}
          ‚Ä¢ Target version achieved: {{ 'YES' if detected_python_version is version(python_version_management.target_version, '>=') else 'NO' }}
          ‚Ä¢ pip functionality: {{ python_validation_results.pip_check | default('UNKNOWN') }}
          
          {% if python_needs_upgrade %}
          ‚ö†Ô∏è  Python upgrade recommended from {{ detected_python_version }} to {{ python_version_management.target_version }}
          {% else %}
          ‚úÖ Python version meets target requirements
          {% endif %}
      tags: ['test', 'summary']
