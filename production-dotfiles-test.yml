---
# Production dotfiles deployment test with enhanced backup system
- hosts: localhost
  connection: local
  gather_facts: yes
  become: no
  vars:
    profile: "{{ profile | default('enterprise') }}"
    environment_type: "{{ environment_type | default('enterprise') }}"
    dotfiles_enabled: true
    ansible_user: mdrozrosario

  tasks:
    - name: "üöÄ PRODUCTION DOTFILES DEPLOYMENT"
      debug:
        msg: |
          Production deployment of enhanced dotfiles system
          Profile: {{ profile }}
          Environment: {{ environment_type }}
          Enhanced backup system: ENABLED
      tags: ['dotfiles']

    - name: Include common role for environment detection
      include_role:
        name: common
      tags: ['dotfiles']

    - name: Include dotfiles role with enhanced backup
      include_role:
        name: dotfiles
      tags: ['dotfiles']

    - name: "üìä PRODUCTION DEPLOYMENT VERIFICATION"
      debug:
        msg: |
          üéâ PRODUCTION DEPLOYMENT COMPLETED!
          
          Enhanced Features Deployed:
          ‚Ä¢ ‚úÖ Automatic backup system with conflict resolution
          ‚Ä¢ ‚úÖ Conditional deployment based on macOS enterprise profile
          ‚Ä¢ ‚úÖ GNU Stow-compatible directory structure
          ‚Ä¢ ‚úÖ Timestamped backups in ~/.dotsible/backups/
          ‚Ä¢ ‚úÖ Recovery manifests with restoration instructions
          
          Verify deployment:
          ls -la ~/.gitconfig ~/.config/nvim ~/.zshrc ~/.tmux.conf
          ls -la ~/.dotsible/backups/
      tags: ['dotfiles']

    - name: Final symlink verification
      stat:
        path: "{{ item }}"
      loop:
        - "{{ ansible_env.HOME }}/.gitconfig"
        - "{{ ansible_env.HOME }}/.config/nvim"
        - "{{ ansible_env.HOME }}/.zshrc"
        - "{{ ansible_env.HOME }}/.tmux.conf"
        - "{{ ansible_env.HOME }}/.config/starship.toml"
        - "{{ ansible_env.HOME }}/.config/alacritty"
      register: final_symlink_check
      tags: ['dotfiles']

    - name: "üéØ FINAL DEPLOYMENT STATUS"
      debug:
        msg: |
          PRODUCTION DEPLOYMENT STATUS REPORT
          ===================================
          
          Symlink Status:
          {% for result in final_symlink_check.results %}
          ‚Ä¢ {{ result.item | basename }}: {{ 'EXISTS' if result.stat.exists else 'MISSING' }}{{ ' (SYMLINK ‚úÖ)' if result.stat.islnk | default(false) else ' (REGULAR FILE ‚ö†Ô∏è)' if result.stat.exists else ' (NOT FOUND ‚ùå)' }}
          {% endfor %}
          
          {% set symlinks_created = final_symlink_check.results | selectattr('stat.islnk', 'equalto', true) | list | length %}
          {% set files_exist = final_symlink_check.results | selectattr('stat.exists', 'equalto', true) | list | length %}
          
          Summary:
          ‚Ä¢ Total configurations: {{ final_symlink_check.results | length }}
          ‚Ä¢ Symlinks created: {{ symlinks_created }}
          ‚Ä¢ Files existing: {{ files_exist }}
          ‚Ä¢ Success rate: {{ ((symlinks_created / final_symlink_check.results | length) * 100) | round(1) }}%
          
          {% if symlinks_created == final_symlink_check.results | length %}
          üéâ DEPLOYMENT SUCCESSFUL - All configurations deployed as symlinks!
          {% elif symlinks_created > 0 %}
          ‚ö†Ô∏è  PARTIAL SUCCESS - Some configurations deployed, check individual status above
          {% else %}
          ‚ùå DEPLOYMENT FAILED - No symlinks created, check logs and backup system
          {% endif %}
      tags: ['dotfiles']

    - name: Check backup directory status
      find:
        paths: "{{ ansible_env.HOME }}/.dotsible/backups"
        file_type: directory
      register: backup_status
      ignore_errors: yes
      tags: ['dotfiles']

    - name: "üõ°Ô∏è BACKUP SYSTEM STATUS"
      debug:
        msg: |
          BACKUP SYSTEM VERIFICATION
          =========================
          
          Backup directories found: {{ backup_status.files | default([]) | length }}
          {% for backup_dir in backup_status.files | default([]) %}
          ‚Ä¢ {{ backup_dir.path | basename }} ({{ backup_dir.mtime | int | strftime('%Y-%m-%d %H:%M:%S') }})
          {% endfor %}
          
          {% if backup_status.files | default([]) | length > 0 %}
          ‚úÖ Backup system operational - {{ backup_status.files | length }} backup(s) available
          {% else %}
          ‚ö†Ô∏è  No backups found - either no conflicts occurred or backup system needs attention
          {% endif %}
          
          Recovery location: ~/.dotsible/backups/
          Manifest files: Check for *_backup_manifest.txt in backup directories
      tags: ['dotfiles']
