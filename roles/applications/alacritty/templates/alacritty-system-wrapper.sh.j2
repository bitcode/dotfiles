#!/bin/bash
# System-wide Alacritty GPU Wrapper
# Auto-generated by Ansible for {{ ansible_hostname }}
# 
# This wrapper ensures all Alacritty launches use optimal GPU configuration
# and proper shell environment, regardless of launch method.

# Set optimal GPU environment variables
{% if alacritty_gpu_config.mesa_loader_override %}
export MESA_LOADER_DRIVER_OVERRIDE="{{ alacritty_gpu_config.mesa_loader_override }}"
{% endif %}
{% if (gpu_info.count | int) > 1 %}
export MESA_SHADER_CACHE_DISABLE=1
{% endif %}

# Ensure proper shell configuration for desktop launches
# This addresses the issue where rofi/desktop launches don't load shell config
if [ -z "$SHELL" ] || [ "$SHELL" = "/bin/sh" ]; then
    # Set ZSH as the shell if it's available and configured
    if [ -f "{{ ansible_user_dir }}/.zshrc" ] && command -v zsh >/dev/null 2>&1; then
        export SHELL="$(command -v zsh)"
    fi
fi

# Set proper home directory for desktop launches
if [ -z "$HOME" ]; then
    export HOME="{{ ansible_user_dir }}"
fi

# Ensure XDG directories are set for desktop integration
if [ -z "$XDG_CONFIG_HOME" ]; then
    export XDG_CONFIG_HOME="{{ ansible_user_dir }}/.config"
fi

# Launch Alacritty with proper environment but let Alacritty handle shell configuration
# The Alacritty config already specifies ZSH + tmux auto-start, so we don't override it
# This ensures that tmux auto-start works correctly from desktop/rofi launches

# Set SHELL environment variable to ensure proper shell detection
if [ -f "{{ ansible_user_dir }}/.zshrc" ] && command -v zsh >/dev/null 2>&1; then
    export SHELL="$(command -v zsh)"
fi

# Launch Alacritty without overriding its shell configuration
# This allows the Alacritty config (alacritty.toml) to handle ZSH + tmux auto-start
exec /usr/bin/alacritty "$@"
