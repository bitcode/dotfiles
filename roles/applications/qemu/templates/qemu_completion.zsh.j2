#compdef qemu-manager qemu-arm64 qemu-arm32 qemu-x86_64 qemu-riscv64 qemu-debug-arm64 qemu-debug-arm32 qemu-debug-x86_64 qemu-debug-riscv64 qemu-user-arm64 qemu-user-arm32 qemu-user-x86_64 qemu-user-riscv64

# QEMU ZSH Completion
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

_qemu_architectures() {
    local architectures=({{ qemu_config.architectures | join(' ') }})
    _describe 'architectures' architectures
}

_qemu_manager() {
    local context state line
    local -a commands
    
    commands=(
        'status:Check QEMU installation status'
        'scripts:List available QEMU scripts'
        'examples:List available examples'
        'launch:Launch architecture-specific emulator'
        'debug:Start debug session'
        'user:Run user mode emulation'
    )
    
    _arguments \
        '1: :->command' \
        '*: :->args'
    
    case $state in
        command)
            _describe 'commands' commands
            ;;
        args)
            case $line[1] in
                launch|debug|user)
                    _qemu_architectures
                    ;;
            esac
            ;;
    esac
}

_qemu_launch() {
    _arguments \
        '(-h --help)'{-h,--help}'[Show help message]' \
        '(-m --memory)'{-m,--memory}'[Memory size]:memory size:' \
        '(-k --kernel)'{-k,--kernel}'[Kernel image]:kernel file:_files' \
        '(-i --initrd)'{-i,--initrd}'[Initial ramdisk]:initrd file:_files' \
        '(-d --debug)'{-d,--debug}'[Enable GDB debugging]' \
        '(-n --no-accel)'{-n,--no-accel}'[Disable hardware acceleration]' \
        '(-c --cmdline)'{-c,--cmdline}'[Kernel command line]:command line:' \
        '(-v --verbose)'{-v,--verbose}'[Verbose output]' \
        '--dry-run[Show command without executing]' \
        '*:kernel or initrd:_files'
}

_qemu_debug() {
    _arguments \
        '(-h --help)'{-h,--help}'[Show help message]' \
        '(-b --binary)'{-b,--binary}'[Binary to debug]:binary file:_files' \
        '(-g --gdb)'{-g,--gdb}'[Auto-launch GDB]' \
        '(-p --port)'{-p,--port}'[GDB port]:port number:' \
        '(-m --memory)'{-m,--memory}'[Memory size]:memory size:' \
        '(-w --wait)'{-w,--wait}'[Wait for GDB connection]' \
        '(-n --no-accel)'{-n,--no-accel}'[Disable hardware acceleration]' \
        '(-v --verbose)'{-v,--verbose}'[Verbose output]' \
        '--gdb-script[GDB script to execute]:gdb script:_files' \
        '--dry-run[Show commands without executing]' \
        '*:binary file:_files'
}

_qemu_user() {
    _arguments \
        '(-h --help)'{-h,--help}'[Show help message]' \
        '(-d --debug)'{-d,--debug}'[Enable GDB debugging]' \
        '(-p --port)'{-p,--port}'[GDB port]:port number:' \
        '(-v --verbose)'{-v,--verbose}'[Verbose output]' \
        '(-e --env)'{-e,--env}'[Set environment variable]:env var:' \
        '(-L --library-path)'{-L,--library-path}'[Set library path]:library path:_directories' \
        '--dry-run[Show command without executing]' \
        '*:binary and args:_files'
}

# Main completion function
case $service in
    qemu-manager)
        _qemu_manager
        ;;
    qemu-arm64|qemu-arm32|qemu-x86_64|qemu-riscv64|qemu-riscv32)
        _qemu_launch
        ;;
    qemu-debug-*)
        _qemu_debug
        ;;
    qemu-user-*)
        _qemu_user
        ;;
esac