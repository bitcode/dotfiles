#!/bin/bash
# QEMU Management Tool
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

set -euo pipefail

# Configuration
QEMU_CONFIG_DIR="{{ qemu_paths.config_dir }}"
QEMU_SCRIPTS_DIR="{{ qemu_paths.scripts_dir }}"
QEMU_EXAMPLES_DIR="{{ qemu_paths.examples_dir }}"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Helper functions
print_header() {
    echo -e "${BLUE}================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}================================${NC}"
}

print_success() {
    echo -e "${GREEN}✓ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠ $1${NC}"
}

print_error() {
    echo -e "${RED}✗ $1${NC}"
}

# Check QEMU installation status
check_qemu_status() {
    print_header "QEMU Installation Status"
    
    local system_emulators=(
{% for arch, emulator in qemu_config.system_emulators.items() %}
        "{{ arch }}:{{ emulator }}"
{% endfor %}
    )
    
    local user_emulators=(
{% for arch, emulator in qemu_config.user_emulators.items() %}
        "{{ arch }}:{{ emulator }}"
{% endfor %}
    )
    
    echo "System Emulators:"
    for emulator_info in "${system_emulators[@]}"; do
        local arch="${emulator_info%%:*}"
        local emulator="${emulator_info##*:}"
        if command -v "$emulator" >/dev/null 2>&1; then
            print_success "$arch: $emulator"
        else
            print_error "$arch: $emulator (not found)"
        fi
    done
    
    echo ""
    echo "User Emulators:"
    for emulator_info in "${user_emulators[@]}"; do
        local arch="${emulator_info%%:*}"
        local emulator="${emulator_info##*:}"
        if command -v "$emulator" >/dev/null 2>&1; then
            print_success "$arch: $emulator"
        else
            print_error "$arch: $emulator (not found)"
        fi
    done
    
    echo ""
    echo "Configuration:"
    echo "  Config Dir: $QEMU_CONFIG_DIR"
    echo "  Scripts Dir: $QEMU_SCRIPTS_DIR"
    echo "  Examples Dir: $QEMU_EXAMPLES_DIR"
}

# List available scripts
list_scripts() {
    print_header "Available QEMU Scripts"
    
    if [[ -d "$QEMU_SCRIPTS_DIR" ]]; then
        echo "Launch Scripts:"
        for script in "$QEMU_SCRIPTS_DIR"/qemu-*; do
            if [[ -f "$script" ]] && [[ ! "$script" =~ debug|user|manager ]]; then
                local arch="${script##*/qemu-}"
                print_success "$arch: $(basename "$script")"
            fi
        done
        
        echo ""
        echo "Debug Scripts:"
        for script in "$QEMU_SCRIPTS_DIR"/qemu-debug-*; do
            if [[ -f "$script" ]]; then
                local arch="${script##*/qemu-debug-}"
                print_success "$arch: $(basename "$script")"
            fi
        done
        
        echo ""
        echo "User Mode Scripts:"
        for script in "$QEMU_SCRIPTS_DIR"/qemu-user-*; do
            if [[ -f "$script" ]]; then
                local arch="${script##*/qemu-user-}"
                print_success "$arch: $(basename "$script")"
            fi
        done
    else
        print_error "Scripts directory not found: $QEMU_SCRIPTS_DIR"
    fi
}

# List examples
list_examples() {
    print_header "Available Examples"
    
    if [[ -d "$QEMU_EXAMPLES_DIR" ]]; then
        for arch_dir in "$QEMU_EXAMPLES_DIR"/*; do
            if [[ -d "$arch_dir" ]] && [[ "$(basename "$arch_dir")" != "docs" ]] && [[ "$(basename "$arch_dir")" != "templates" ]]; then
                local arch="$(basename "$arch_dir")"
                echo "$arch:"
                for example in "$arch_dir"/*; do
                    if [[ -f "$example" ]]; then
                        echo "  - $(basename "$example")"
                    fi
                done
                echo ""
            fi
        done
        
        if [[ -d "$QEMU_EXAMPLES_DIR/docs" ]]; then
            echo "Documentation:"
            for doc in "$QEMU_EXAMPLES_DIR/docs"/*; do
                if [[ -f "$doc" ]]; then
                    echo "  - $(basename "$doc")"
                fi
            done
        fi
    else
        print_error "Examples directory not found: $QEMU_EXAMPLES_DIR"
    fi
}

# Interactive menu
show_menu() {
    print_header "QEMU Management Tool"
    echo "1. Check QEMU Status"
    echo "2. List Available Scripts"
    echo "3. List Examples"
    echo "4. Launch Architecture-specific Emulator"
    echo "5. Start Debug Session"
    echo "6. Run User Mode Emulation"
    echo "7. Open Examples Directory"
    echo "8. View Documentation"
    echo "9. Exit"
    echo ""
    read -p "Select an option (1-9): " choice
}

# Launch emulator
launch_emulator() {
    echo "Available architectures: {{ qemu_config.architectures | join(', ') }}"
    read -p "Enter architecture: " arch
    
    local script="$QEMU_SCRIPTS_DIR/qemu-$arch"
    if [[ -f "$script" ]]; then
        echo "Launching QEMU $arch emulator..."
        exec "$script" "$@"
    else
        print_error "Script not found: $script"
    fi
}

# Start debug session
start_debug() {
    echo "Available architectures: {{ qemu_config.architectures | join(', ') }}"
    read -p "Enter architecture: " arch
    read -p "Enter binary path (optional): " binary
    
    local script="$QEMU_SCRIPTS_DIR/qemu-debug-$arch"
    if [[ -f "$script" ]]; then
        echo "Starting QEMU $arch debug session..."
        if [[ -n "$binary" ]]; then
            exec "$script" --binary "$binary" --gdb
        else
            exec "$script" --wait
        fi
    else
        print_error "Debug script not found: $script"
    fi
}

# Run user mode emulation
run_user_mode() {
    echo "Available architectures: {{ qemu_config.architectures | join(', ') }}"
    read -p "Enter architecture: " arch
    read -p "Enter binary path: " binary
    
    local script="$QEMU_SCRIPTS_DIR/qemu-user-$arch"
    if [[ -f "$script" ]]; then
        echo "Running QEMU $arch user mode emulation..."
        exec "$script" "$binary"
    else
        print_error "User mode script not found: $script"
    fi
}

# Open examples directory
open_examples() {
    if [[ -d "$QEMU_EXAMPLES_DIR" ]]; then
        if command -v open >/dev/null 2>&1; then
            open "$QEMU_EXAMPLES_DIR"
        elif command -v xdg-open >/dev/null 2>&1; then
            xdg-open "$QEMU_EXAMPLES_DIR"
        else
            echo "Examples directory: $QEMU_EXAMPLES_DIR"
        fi
    else
        print_error "Examples directory not found: $QEMU_EXAMPLES_DIR"
    fi
}

# View documentation
view_docs() {
    local docs_dir="$QEMU_EXAMPLES_DIR/docs"
    if [[ -d "$docs_dir" ]]; then
        echo "Available documentation:"
        for doc in "$docs_dir"/*; do
            if [[ -f "$doc" ]]; then
                echo "  - $(basename "$doc")"
            fi
        done
        echo ""
        read -p "Enter document name to view (or press Enter to skip): " doc_name
        
        if [[ -n "$doc_name" ]]; then
            local doc_path="$docs_dir/$doc_name"
            if [[ -f "$doc_path" ]]; then
                if command -v less >/dev/null 2>&1; then
                    less "$doc_path"
                else
                    cat "$doc_path"
                fi
            else
                print_error "Document not found: $doc_path"
            fi
        fi
    else
        print_error "Documentation directory not found: $docs_dir"
    fi
}

# Main function
main() {
    if [[ $# -eq 0 ]]; then
        # Interactive mode
        while true; do
            show_menu
            case $choice in
                1)
                    check_qemu_status
                    echo ""
                    read -p "Press Enter to continue..."
                    ;;
                2)
                    list_scripts
                    echo ""
                    read -p "Press Enter to continue..."
                    ;;
                3)
                    list_examples
                    echo ""
                    read -p "Press Enter to continue..."
                    ;;
                4)
                    launch_emulator
                    ;;
                5)
                    start_debug
                    ;;
                6)
                    run_user_mode
                    ;;
                7)
                    open_examples
                    echo ""
                    read -p "Press Enter to continue..."
                    ;;
                8)
                    view_docs
                    echo ""
                    read -p "Press Enter to continue..."
                    ;;
                9)
                    echo "Goodbye!"
                    exit 0
                    ;;
                *)
                    print_error "Invalid option: $choice"
                    echo ""
                    read -p "Press Enter to continue..."
                    ;;
            esac
        done
    else
        # Command line mode
        case $1 in
            status)
                check_qemu_status
                ;;
            scripts)
                list_scripts
                ;;
            examples)
                list_examples
                ;;
            launch)
                shift
                launch_emulator "$@"
                ;;
            debug)
                shift
                start_debug "$@"
                ;;
            user)
                shift
                run_user_mode "$@"
                ;;
            *)
                echo "Usage: $0 [status|scripts|examples|launch|debug|user]"
                echo "Run without arguments for interactive mode"
                exit 1
                ;;
        esac
    fi
}

# Run main function
main "$@"