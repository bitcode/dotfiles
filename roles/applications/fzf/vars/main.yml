---
# FZF application role variables - Cross-platform fuzzy finder

# Package names for different OS families
fzf_packages:
  debian:
    - fzf
  archlinux:
    - fzf
  darwin:
    - fzf
  windows:
    - fzf  # Available via Chocolatey, Scoop, winget

# FZF configuration paths
fzf_home_path: "{{ ansible_env.HOME if ansible_os_family != 'Windows' else ansible_env.USERPROFILE }}"
fzf_config_path: "{{ fzf_home_path }}/.fzf"
fzf_shell_config_path: "{{ fzf_home_path }}/.fzf.{{ ansible_user_shell | basename }}"

# Installation methods by platform
fzf_install_methods:
  Darwin: "homebrew"
  Archlinux: "pacman"
  Debian: "apt"
  Ubuntu: "apt"
  Windows: "chocolatey"

# Git installation configuration
fzf_git_repo: "https://github.com/junegunn/fzf.git"
fzf_git_path: "{{ fzf_home_path }}/.fzf"

# FZF default options
fzf_default_opts: >-
  --height 40%
  --layout=reverse
  --border
  --inline-info
  --preview 'bat --style=numbers --color=always --line-range :500 {}'
  --preview-window 'right:50%:wrap'
  --bind 'ctrl-/:toggle-preview'
  --bind 'ctrl-u:preview-page-up'
  --bind 'ctrl-d:preview-page-down'

# FZF key bindings
fzf_key_bindings:
  ctrl_t: "fzf-file-widget"      # Ctrl+T for file search
  ctrl_r: "fzf-history-widget"   # Ctrl+R for history search
  alt_c: "fzf-cd-widget"         # Alt+C for directory search

# FZF completion settings
fzf_completion_enabled: true
fzf_completion_trigger: "**"

# Shell integration settings
fzf_shell_integration:
  bash: true
  zsh: true
  fish: true

# FZF color scheme (Dracula theme)
fzf_color_scheme: >-
  --color=dark
  --color=fg:-1,bg:-1,hl:#5fff87,fg+:-1,bg+:-1,hl+:#ffff5f
  --color=info:#af87ff,prompt:#5fff87,pointer:#ff87d7,marker:#ff87d7,spinner:#ff87d7

# Advanced FZF configuration
fzf_advanced_options:
  # Use ripgrep for file search if available
  use_ripgrep: true
  # Use fd for file search if available
  use_fd: true
  # Enable multi-select
  multi_select: true
  # Case insensitive search
  case_insensitive: true

# Platform-specific package managers
fzf_package_managers:
  Darwin:
    primary: "homebrew"
    command: "brew install fzf"
    check: "brew list fzf"
  Archlinux:
    primary: "pacman"
    command: "pacman -S fzf"
    check: "pacman -Q fzf"
  Debian:
    primary: "apt"
    command: "apt install fzf"
    check: "dpkg -l | grep fzf"
  Ubuntu:
    primary: "apt"
    command: "apt install fzf"
    check: "dpkg -l | grep fzf"
  Windows:
    primary: "chocolatey"
    command: "choco install fzf"
    check: "choco list --local-only fzf"
    alternatives:
      scoop:
        command: "scoop install fzf"
        check: "scoop list fzf"
      winget:
        command: "winget install junegunn.fzf"
        check: "winget list junegunn.fzf"

# Feature flags
fzf_install_shell_integration: true
fzf_install_key_bindings: true
fzf_install_completion: true
fzf_backup_existing_config: true
fzf_create_symlinks: false

# Environment variables to set
fzf_environment_vars:
  FZF_DEFAULT_OPTS: "{{ fzf_default_opts }} {{ fzf_color_scheme }}"
  FZF_DEFAULT_COMMAND: "{{ 'rg --files --hidden --follow --glob \"!.git/*\"' if fzf_advanced_options.use_ripgrep else 'find . -type f' }}"
  FZF_CTRL_T_COMMAND: "$FZF_DEFAULT_COMMAND"
  FZF_ALT_C_COMMAND: "{{ 'fd --type d --hidden --follow --exclude .git' if fzf_advanced_options.use_fd else 'find . -type d' }}"

# Shell configuration snippets (custom functions and aliases)
fzf_shell_snippets:
  zsh: |
    # Custom FZF functions for Git integration
    if command -v fzf >/dev/null 2>&1 && command -v git >/dev/null 2>&1; then
      fzf_git_log() {
        git log --oneline --color=always | fzf --ansi --preview 'git show --color=always {1}' --preview-window=right:50%
      }

      fzf_git_branch() {
        git branch -a | grep -v HEAD | sed 's/^..//' | fzf --preview 'git log --oneline --color=always {1}' | xargs git checkout
      }

      # Process search with fzf
      fzf_kill() {
        local pid
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
        if [[ -n $pid ]]; then
          echo $pid | xargs kill -${1:-9}
        fi
      }

      # Aliases
      alias fgl='fzf_git_log'
      alias fgb='fzf_git_branch'
      alias fkill='fzf_kill'
    fi

    # Enhanced preview alias (requires bat)
    if command -v fzf >/dev/null 2>&1 && command -v bat >/dev/null 2>&1; then
      alias fzp='fzf --preview "bat --style=numbers --color=always --line-range :500 {}"'
    fi

  bash: |
    # Custom FZF functions for Git integration
    if command -v fzf >/dev/null 2>&1 && command -v git >/dev/null 2>&1; then
      fzf_git_log() {
        git log --oneline --color=always | fzf --ansi --preview 'git show --color=always {1}' --preview-window=right:50%
      }

      # Aliases
      alias fgl='fzf_git_log'
    fi

    # Enhanced preview alias (requires bat)
    if command -v fzf >/dev/null 2>&1 && command -v bat >/dev/null 2>&1; then
      alias fzp='fzf --preview "bat --style=numbers --color=always --line-range :500 {}"'
    fi

# Dependencies that enhance FZF functionality
fzf_optional_dependencies:
  - name: "ripgrep"
    description: "Fast file content search"
    check_command: "rg --version"
  - name: "fd"
    description: "Fast file finder"
    check_command: "fd --version"
  - name: "bat"
    description: "Enhanced cat with syntax highlighting"
    check_command: "bat --version"
  - name: "git"
    description: "Version control integration"
    check_command: "git --version"
