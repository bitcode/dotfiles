# ═══════════════════════════════════════════════════════════════
# Minimal GDB Configuration for Assembly Development
# Generated by Dotsible - {{ ansible_date_time.iso8601 }}
# Platform: {{ ansible_os_family }} {{ ansible_architecture }}
# Profile: {{ profile | default('minimal') }}
# ═══════════════════════════════════════════════════════════════

# Core Settings
set confirm off
set verbose off
set history save on
set history size {{ gdb_config.history_size }}
set history filename {{ gdb_config.history_file }}
set print pretty on
set print array on
set print symbol-filename on

# Architecture-specific settings
{% if ansible_architecture in ['arm64', 'aarch64'] %}
set architecture aarch64
{% elif ansible_architecture in ['armv7l', 'armv6l'] %}
set architecture arm
{% elif ansible_architecture in ['x86_64', 'amd64'] %}
set architecture i386:x86-64
{% endif %}
set endian auto

# Assembly-specific settings
set disassembly-flavor intel
set print asm-demangle on

# Basic TUI configuration
set tui border-kind acs
set tui active-border-mode standout
set tui border-mode normal

# ═══════════════════════════════════════════════════════════════
# BASIC DEBUGGING HELPERS
# ═══════════════════════════════════════════════════════════════

define show_regs
    printf "═══ Registers ═══\n"
{% if ansible_architecture in ['arm64', 'aarch64'] %}
    printf "X0: %016lx  X1: %016lx  X2: %016lx  X3: %016lx\n", $x0, $x1, $x2, $x3
    printf "SP: %016lx  FP: %016lx  LR: %016lx  PC: %016lx\n", $sp, $x29, $x30, $pc
{% elif ansible_architecture in ['x86_64', 'amd64'] %}
    printf "RAX: %016lx  RBX: %016lx  RCX: %016lx  RDX: %016lx\n", $rax, $rbx, $rcx, $rdx
    printf "RSP: %016lx  RBP: %016lx  RSI: %016lx  RDI: %016lx\n", $rsp, $rbp, $rsi, $rdi
    printf "RIP: %016lx\n", $rip
{% endif %}
end

define show_stack
    printf "═══ Stack ═══\n"
    x/16gx $sp
end

define show_next
    printf "═══ Next Instruction ═══\n"
    x/i $pc
    x/3i $pc+4
end

# ═══════════════════════════════════════════════════════════════
# BASIC ALIASES
# ═══════════════════════════════════════════════════════════════

alias r = run
alias c = continue
alias s = step
alias n = next
alias q = quit
alias bt = backtrace
alias p = print
alias x = examine
alias sr = show_regs
alias ss = show_stack
alias sn = show_next

# ═══════════════════════════════════════════════════════════════
# INITIALIZATION
# ═══════════════════════════════════════════════════════════════

printf "Minimal GDB Configuration Loaded\n"
printf "Platform: {{ ansible_os_family }} {{ ansible_architecture }}\n"
printf "Basic commands: r, c, s, n, q, bt, p, x\n"
printf "Helpers: sr (show_regs), ss (show_stack), sn (show_next)\n"
printf "Configuration: {{ gdb_config.init_file }}\n"

# Set basic layout
layout split
focus cmd

# ═══════════════════════════════════════════════════════════════
# END OF MINIMAL CONFIGURATION
# ═══════════════════════════════════════════════════════════════