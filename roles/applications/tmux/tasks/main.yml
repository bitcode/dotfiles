---
# Tmux installation and configuration role
# Note: Tmux is Unix-only (macOS, Linux) - Windows is excluded

- name: Check if tmux is already installed
  command: tmux -V
  register: tmux_check
  failed_when: false
  changed_when: false
  when: ansible_os_family != "Windows"
  tags: ['tmux', 'check']

- name: Display tmux installation status
  debug:
    msg: "Tmux: {{ '‚úÖ INSTALLED (' + tmux_check.stdout.strip() + ')' if tmux_check.rc == 0 else '‚ùå MISSING' }}"
  when: ansible_os_family != "Windows"
  tags: ['tmux', 'status']

- name: Install Tmux on macOS
  homebrew:
    name: tmux
    state: present
  when:
    - ansible_os_family == "Darwin"
    - tmux_check.rc != 0
  register: tmux_install_macos
  tags: ['tmux', 'install']

- name: Install Tmux on Arch Linux
  pacman:
    name: tmux
    state: present
  become: yes
  when:
    - ansible_distribution == "Archlinux"
    - tmux_check.rc != 0
  register: tmux_install_arch
  tags: ['tmux', 'install']

- name: Install Tmux on Ubuntu/Debian
  apt:
    name: tmux
    state: present
    update_cache: yes
  become: yes
  when:
    - ansible_os_family == "Debian"
    - tmux_check.rc != 0
  register: tmux_install_ubuntu
  tags: ['tmux', 'install']

- name: Display tmux installation result
  debug:
    msg: "Tmux Installation: {{ 'üîÑ CHANGED - Installed' if (tmux_install_macos.changed | default(false)) or (tmux_install_arch.changed | default(false)) or (tmux_install_ubuntu.changed | default(false)) else '‚úÖ ALREADY INSTALLED' }}"
  when: ansible_os_family != "Windows"
  tags: ['tmux', 'status']

# Install TPM (Tmux Plugin Manager)
- name: Install TPM (Tmux Plugin Manager)
  include_tasks: install_tpm.yml
  when: ansible_os_family != "Windows"
  tags: ['tmux', 'tpm', 'plugins']

# NOTE: Tmux configuration files are deployed via the dotfiles role using GNU Stow
# This ensures proper symlink management and avoids conflicts with stow deployment
# The dotfiles role will handle: files/dotfiles/tmux/.tmux.conf -> ~/.tmux.conf
- name: Tmux configuration deployment info
  debug:
    msg: |
      Tmux configuration files will be deployed via the dotfiles role using GNU Stow.
      Source: {{ playbook_dir }}/files/dotfiles/tmux/.tmux.conf
      Target: {{ ansible_user_dir }}/.tmux.conf (symlink)
  when: ansible_os_family != "Windows"
  tags: ['tmux', 'config', 'info']

- name: Check if tmux scripts directory exists
  stat:
    path: "{{ playbook_dir }}/files/dotfiles/tmux/scripts/"
  register: tmux_scripts_check
  when: ansible_os_family != "Windows"
  tags: ['tmux', 'scripts']

- name: Ensure .local/bin directory exists
  file:
    path: "{{ ansible_user_dir }}/.local/bin"
    state: directory
    mode: '0755'
  when: ansible_os_family != "Windows"
  tags: ['tmux', 'setup']

- name: Deploy Tmux scripts
  copy:
    src: "{{ playbook_dir }}/files/dotfiles/tmux/scripts/"
    dest: "{{ ansible_user_dir }}/.local/bin/"
    mode: '0755'
    backup: yes
  when:
    - ansible_os_family != "Windows"
    - tmux_scripts_check.stat.exists
  tags: ['tmux', 'scripts']

- name: Verify Tmux installation
  command: tmux -V
  register: tmux_version
  failed_when: false
  changed_when: false
  when: ansible_os_family != "Windows"
  tags: ['tmux', 'verify']

- name: Display Tmux installation status
  debug:
    msg: "Tmux: {{ '‚úÖ INSTALLED (' + tmux_version.stdout.strip() + ')' if tmux_version.rc == 0 else '‚ùå INSTALLATION FAILED' }}"
  when: ansible_os_family != "Windows"
  tags: ['tmux', 'status']

- name: Skip tmux installation on Windows
  debug:
    msg: |
      ‚è≠Ô∏è Tmux Installation: SKIPPED
      Reason: Tmux is not available on Windows platform.
      Windows users should use Windows Terminal, PowerShell, or WSL for terminal multiplexing.
  when: ansible_os_family == "Windows"
  tags: ['tmux', 'skip']

- name: Tmux installation summary
  debug:
    msg: |
      üì∫ Tmux Installation Summary:
      ‚Ä¢ Tmux: {{ 'INSTALLED' if tmux_version.rc == 0 else 'FAILED' }}
      ‚Ä¢ TPM: {{ 'INSTALLED' if tpm_installed | default(false) else 'FAILED' }}
      ‚Ä¢ Configuration: {{ 'DEPLOYED' if ansible_os_family != 'Windows' else 'SKIPPED (Windows)' }}
      ‚Ä¢ Platform: {{ ansible_distribution }}

      Next steps:
      1. Start tmux: tmux new-session
      2. Install plugins: prefix + I (in tmux)
      3. Reload config: prefix + r (in tmux)
  when: ansible_os_family != "Windows"
  tags: ['tmux', 'summary']
