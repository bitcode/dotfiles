---
# Setup Desktop Layout Management System
# Creates scripts and automation for desktop layout management

- name: Create desktop management directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ ansible_user_dir }}/.dotsible"
    - "{{ ansible_user_dir }}/.dotsible/scripts"
    - "{{ macos_enterprise.desktop_layout.backup_dir }}"
    - "{{ ansible_user_dir }}/.local/bin"
  tags: ['desktop', 'setup', 'directories']

- name: Create desktop layout backup script
  copy:
    content: |
      #!/bin/bash
      # macOS Desktop Layout Backup Script
      # Generated by Dotsible macOS Enterprise Management
      
      set -e
      
      BACKUP_DIR="{{ macos_enterprise.desktop_layout.backup_dir }}"
      TIMESTAMP=$(date +"%Y%m%dT%H%M%S")
      CURRENT_BACKUP="$BACKUP_DIR/$TIMESTAMP"
      
      echo "🖥️  Creating desktop layout backup..."
      echo "Backup directory: $CURRENT_BACKUP"
      
      # Create backup directory
      mkdir -p "$CURRENT_BACKUP"
      
      # Backup plist files
      {% for plist in macos_enterprise.desktop_layout.plist_files %}
      if [ -f "{{ plist.path | expanduser }}" ]; then
          echo "Backing up {{ plist.description }}..."
          cp "{{ plist.path | expanduser }}" "$CURRENT_BACKUP/{{ plist.backup_key }}.plist"
          plutil -convert xml1 "$CURRENT_BACKUP/{{ plist.backup_key }}.plist" 2>/dev/null || true
      fi
      {% endfor %}
      
      # Export current settings
      echo "Exporting current desktop settings..."
      defaults read com.apple.finder DesktopViewSettings > "$CURRENT_BACKUP/finder_desktop_settings.txt" 2>/dev/null || echo "{}" > "$CURRENT_BACKUP/finder_desktop_settings.txt"
      defaults read com.apple.finder FK_StandardViewSettings > "$CURRENT_BACKUP/finder_icon_settings.txt" 2>/dev/null || echo "{}" > "$CURRENT_BACKUP/finder_icon_settings.txt"
      defaults read com.apple.dock > "$CURRENT_BACKUP/dock_settings.txt" 2>/dev/null || echo "{}" > "$CURRENT_BACKUP/dock_settings.txt"
      
      # Take screenshot
      screencapture -x "$CURRENT_BACKUP/desktop_screenshot.png" 2>/dev/null || true
      
      # Create manifest
      cat > "$CURRENT_BACKUP/manifest.yml" << EOF
      backup_info:
        timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
        hostname: $(hostname)
        user: $(whoami)
        macos_version: $(sw_vers -productVersion)
        backup_type: manual
      EOF
      
      # Update latest symlink
      rm -f "$BACKUP_DIR/latest"
      ln -s "$CURRENT_BACKUP" "$BACKUP_DIR/latest"
      
      echo "✅ Desktop layout backup completed: $TIMESTAMP"
      echo "To restore this backup, run:"
      echo "  dotsible-restore-desktop $TIMESTAMP"
      
    dest: "{{ ansible_user_dir }}/.local/bin/dotsible-backup-desktop"
    mode: '0755'
  tags: ['desktop', 'setup', 'backup_script']

- name: Create desktop layout restore script
  copy:
    content: |
      #!/bin/bash
      # macOS Desktop Layout Restore Script
      # Generated by Dotsible macOS Enterprise Management
      
      set -e
      
      BACKUP_DIR="{{ macos_enterprise.desktop_layout.backup_dir }}"
      BACKUP_TIMESTAMP="${1:-latest}"
      RESTORE_SOURCE="$BACKUP_DIR/$BACKUP_TIMESTAMP"
      
      if [ ! -d "$RESTORE_SOURCE" ]; then
          echo "❌ Backup not found: $RESTORE_SOURCE"
          echo "Available backups:"
          ls -la "$BACKUP_DIR" 2>/dev/null || echo "No backups found"
          exit 1
      fi
      
      echo "🔄 Restoring desktop layout from: $BACKUP_TIMESTAMP"
      echo "Source: $RESTORE_SOURCE"
      
      # Create pre-restore backup
      echo "Creating pre-restore backup..."
      dotsible-backup-desktop
      
      # Stop Finder and Dock
      echo "Stopping Finder and Dock..."
      killall Finder 2>/dev/null || true
      killall Dock 2>/dev/null || true
      sleep 2
      
      # Restore plist files
      {% for plist in macos_enterprise.desktop_layout.plist_files %}
      if [ -f "$RESTORE_SOURCE/{{ plist.backup_key }}.plist" ]; then
          echo "Restoring {{ plist.description }}..."
          cp "$RESTORE_SOURCE/{{ plist.backup_key }}.plist" "{{ plist.path | expanduser }}"
      fi
      {% endfor %}
      
      # Restart services
      echo "Restarting Finder and Dock..."
      open -a Finder
      killall Dock 2>/dev/null || true
      
      echo "✅ Desktop layout restored successfully"
      echo "ℹ️  You may need to log out and log back in for all changes to take effect"
      
    dest: "{{ ansible_user_dir }}/.local/bin/dotsible-restore-desktop"
    mode: '0755'
  tags: ['desktop', 'setup', 'restore_script']

- name: Create desktop layout capture script
  copy:
    content: |
      #!/bin/bash
      # macOS Desktop Layout Capture Script
      # Use this script after manually arranging your desktop icons
      
      set -e
      
      echo "🎯 Capturing current desktop layout..."
      echo "This will save your current icon arrangement for future restoration."
      echo ""
      
      # Run backup
      dotsible-backup-desktop
      
      # Get the latest backup timestamp
      LATEST_BACKUP=$(readlink "{{ macos_enterprise.desktop_layout.backup_dir }}/latest" | xargs basename)
      
      echo ""
      echo "✅ Desktop layout captured successfully!"
      echo "Backup ID: $LATEST_BACKUP"
      echo ""
      echo "To restore this layout in the future:"
      echo "  dotsible-restore-desktop $LATEST_BACKUP"
      echo ""
      echo "Or use Ansible:"
      echo "  ansible-playbook site.yml -e \"macos_restore_desktop_layout=true macos_desktop_backup_timestamp=$LATEST_BACKUP\""
      
    dest: "{{ ansible_user_dir }}/.local/bin/dotsible-capture-desktop"
    mode: '0755'
  tags: ['desktop', 'setup', 'capture_script']

- name: Create desktop layout list script
  copy:
    content: |
      #!/bin/bash
      # List available desktop layout backups
      
      BACKUP_DIR="{{ macos_enterprise.desktop_layout.backup_dir }}"
      
      echo "Available Desktop Layout Backups"
      echo "================================"
      echo ""
      
      if [ ! -d "$BACKUP_DIR" ] || [ -z "$(ls -A "$BACKUP_DIR" 2>/dev/null)" ]; then
          echo "No backups found."
          echo "Create your first backup with: dotsible-capture-desktop"
          exit 0
      fi
      
      echo "Backup ID          | Date Created        | Size"
      echo "-------------------|--------------------|---------"
      
      for backup in "$BACKUP_DIR"/20*; do
          if [ -d "$backup" ]; then
              backup_id=$(basename "$backup")
              if [ -f "$backup/manifest.yml" ]; then
                  date_created=$(grep "timestamp:" "$backup/manifest.yml" | cut -d' ' -f4- | head -1)
              else
                  date_created="Unknown"
              fi
              size=$(du -sh "$backup" | cut -f1)
              printf "%-18s | %-18s | %s\n" "$backup_id" "$date_created" "$size"
          fi
      done
      
      echo ""
      if [ -L "$BACKUP_DIR/latest" ]; then
          latest=$(readlink "$BACKUP_DIR/latest" | xargs basename)
          echo "Latest backup: $latest"
      fi
      
    dest: "{{ ansible_user_dir }}/.local/bin/dotsible-list-desktop-backups"
    mode: '0755'
  tags: ['desktop', 'setup', 'list_script']

- name: Add scripts to PATH
  lineinfile:
    path: "{{ ansible_user_dir }}/.zprofile"
    line: 'export PATH="$HOME/.local/bin:$PATH"'
    create: yes
    mode: '0644'
  tags: ['desktop', 'setup', 'path']

- name: Create desktop management aliases
  lineinfile:
    path: "{{ ansible_user_dir }}/.zshrc"
    line: "{{ item }}"
    create: yes
    mode: '0644'
  loop:
    - "# Dotsible Desktop Management Aliases"
    - "alias backup-desktop='dotsible-backup-desktop'"
    - "alias restore-desktop='dotsible-restore-desktop'"
    - "alias capture-desktop='dotsible-capture-desktop'"
    - "alias list-desktop-backups='dotsible-list-desktop-backups'"
  tags: ['desktop', 'setup', 'aliases']

- name: Setup automatic desktop backup (if enabled)
  block:
    - name: Create launchd plist for automatic backup
      copy:
        content: |
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>Label</key>
              <string>com.dotsible.desktop.backup</string>
              <key>ProgramArguments</key>
              <array>
                  <string>{{ ansible_user_dir }}/.local/bin/dotsible-backup-desktop</string>
              </array>
              <key>StartCalendarInterval</key>
              <dict>
                  <key>Hour</key>
                  <integer>12</integer>
                  <key>Minute</key>
                  <integer>0</integer>
              </dict>
              <key>StandardOutPath</key>
              <string>{{ ansible_user_dir }}/.dotsible/desktop_backup.log</string>
              <key>StandardErrorPath</key>
              <string>{{ ansible_user_dir }}/.dotsible/desktop_backup.log</string>
          </dict>
          </plist>
        dest: "{{ ansible_user_dir }}/Library/LaunchAgents/com.dotsible.desktop.backup.plist"
        mode: '0644'

    - name: Load automatic backup service
      command: "launchctl load {{ ansible_user_dir }}/Library/LaunchAgents/com.dotsible.desktop.backup.plist"
      failed_when: false
      changed_when: false

  when: macos_enterprise.desktop_layout.auto_backup.enabled | bool
  tags: ['desktop', 'setup', 'auto_backup']

- name: Display desktop management setup completion
  debug:
    msg: |
      Desktop Management Setup Completed
      =================================
      
      Available Commands:
      - dotsible-capture-desktop     : Capture current desktop layout
      - dotsible-backup-desktop      : Create a backup of current layout
      - dotsible-restore-desktop     : Restore a previous layout
      - dotsible-list-desktop-backups: List available backups
      
      Shell Aliases:
      - capture-desktop
      - backup-desktop
      - restore-desktop
      - list-desktop-backups
      
      Workflow:
      1. Arrange your desktop icons as desired
      2. Run: capture-desktop
      3. Later, restore with: restore-desktop [backup-id]
      
      {% if macos_enterprise.desktop_layout.auto_backup.enabled %}
      Automatic Backup: Enabled (daily at 12:00 PM)
      {% else %}
      Automatic Backup: Disabled
      {% endif %}
  tags: ['desktop', 'setup', 'completion']
