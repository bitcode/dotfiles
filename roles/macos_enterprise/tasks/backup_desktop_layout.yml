---
# Desktop Layout Backup Tasks
# Backs up current desktop icon arrangements and Finder preferences

- name: Create desktop layout backup directory
  file:
    path: "{{ macos_enterprise.desktop_layout.backup_dir }}"
    state: directory
    mode: '0755'
  tags: ['desktop', 'backup', 'directory']

- name: Create timestamped backup subdirectory
  set_fact:
    backup_timestamp: "{{ ansible_date_time.iso8601_basic_short }}"
    current_backup_dir: "{{ macos_enterprise.desktop_layout.backup_dir }}/{{ ansible_date_time.iso8601_basic_short }}"
  tags: ['desktop', 'backup', 'timestamp']

- name: Create current backup directory
  file:
    path: "{{ current_backup_dir }}"
    state: directory
    mode: '0755'
  tags: ['desktop', 'backup', 'directory']

- name: Backup desktop layout plist files
  block:
    - name: Check if plist files exist
      stat:
        path: "{{ item.path | expanduser }}"
      register: plist_file_check
      loop: "{{ macos_enterprise.desktop_layout.plist_files }}"
      loop_control:
        label: "{{ item.path }}"

    - name: Backup existing plist files
      copy:
        src: "{{ item.item.path | expanduser }}"
        dest: "{{ current_backup_dir }}/{{ item.item.backup_key }}.plist"
        remote_src: yes
        mode: '0644'
      when: item.stat.exists
      loop: "{{ plist_file_check.results }}"
      loop_control:
        label: "{{ item.item.path }}"
      register: plist_backup_results

    - name: Export plist files to readable format
      command: "plutil -convert xml1 {{ current_backup_dir }}/{{ item.item.backup_key }}.plist"
      when: item.stat.exists
      loop: "{{ plist_file_check.results }}"
      loop_control:
        label: "{{ item.item.backup_key }}"
      failed_when: false
      changed_when: false
  tags: ['desktop', 'backup', 'plist']

- name: Extract specific desktop settings
  block:
    - name: Extract Finder desktop view settings
      command: "defaults read com.apple.finder DesktopViewSettings"
      register: finder_desktop_settings
      failed_when: false
      changed_when: false

    - name: Extract Finder icon view settings
      command: "defaults read com.apple.finder FK_StandardViewSettings"
      register: finder_icon_settings
      failed_when: false
      changed_when: false

    - name: Extract Dock preferences
      command: "defaults read com.apple.dock"
      register: dock_settings
      failed_when: false
      changed_when: false

    - name: Save extracted settings to JSON files
      copy:
        content: |
          {
            "timestamp": "{{ ansible_date_time.iso8601 }}",
            "hostname": "{{ inventory_hostname }}",
            "user": "{{ ansible_user }}",
            "finder_desktop_settings": {{ finder_desktop_settings.stdout | default('{}') }},
            "finder_icon_settings": {{ finder_icon_settings.stdout | default('{}') }},
            "dock_settings": {{ dock_settings.stdout | default('{}') }}
          }
        dest: "{{ current_backup_dir }}/desktop_settings.json"
        mode: '0644'
  tags: ['desktop', 'backup', 'settings']

- name: Capture current desktop screenshot
  command: "screencapture -x {{ current_backup_dir }}/desktop_screenshot.png"
  failed_when: false
  changed_when: false
  tags: ['desktop', 'backup', 'screenshot']

- name: Create desktop layout manifest
  template:
    src: desktop_layout_manifest.j2
    dest: "{{ current_backup_dir }}/manifest.yml"
    mode: '0644'
  vars:
    backup_info:
      timestamp: "{{ ansible_date_time.iso8601 }}"
      hostname: "{{ inventory_hostname }}"
      user: "{{ ansible_user }}"
      macos_version: "{{ ansible_distribution_version }}"
      backup_files: "{{ plist_backup_results.results | selectattr('changed') | list }}"
  tags: ['desktop', 'backup', 'manifest']

- name: Create symlink to latest backup
  file:
    src: "{{ current_backup_dir }}"
    dest: "{{ macos_enterprise.desktop_layout.backup_dir }}/latest"
    state: link
    force: yes
  tags: ['desktop', 'backup', 'symlink']

- name: Clean up old backups
  block:
    - name: Find old backup directories
      find:
        paths: "{{ macos_enterprise.desktop_layout.backup_dir }}"
        file_type: directory
        age: "{{ macos_enterprise.desktop_layout.auto_backup.retention_days }}d"
        patterns: "20*"
      register: old_backups
      when: macos_enterprise.desktop_layout.auto_backup.enabled | bool

    - name: Remove old backup directories
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ old_backups.files | default([]) }}"
      when: 
        - macos_enterprise.desktop_layout.auto_backup.enabled | bool
        - old_backups.files is defined
  tags: ['desktop', 'backup', 'cleanup']

- name: Display backup completion message
  debug:
    msg: |
      Desktop Layout Backup Completed
      ==============================
      Backup Location: {{ current_backup_dir }}
      Timestamp: {{ backup_timestamp }}
      Files Backed Up: {{ plist_backup_results.results | selectattr('changed') | list | length }}
      
      To restore this layout later, run:
      ansible-playbook site.yml -e "macos_restore_desktop_layout=true macos_desktop_backup_timestamp={{ backup_timestamp }}"
  tags: ['desktop', 'backup', 'completion']
